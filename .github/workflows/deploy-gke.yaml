name: Deploy to GKE

on:
  push:
    branches:
      - main
    paths:
      - 'k8s/**'
      - '.github/workflows/deploy-gke.yaml'
      - '!k8s/README.md'
      - '!README.md'
      - '!**/*.md'
      - '!TASKS.md'
      - '!scripts/**'
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to deploy (e.g., latest, main, sha-abc1234)'
        required: false
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set image tag
        id: image-tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Authenticate to Google Cloud
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
          rm /tmp/gcp-key.json

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} \
            --region ${{ secrets.GKE_ZONE }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Create GHCR secret
        run: |
          kubectl create secret docker-registry ghcr-secret \
            --docker-server=ghcr.io \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.GITHUB_TOKEN }} \
            --docker-email=${{ github.actor }}@users.noreply.github.com \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Update deployment image
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.image-tag.outputs.tag }}"
          echo "Deploying image: $IMAGE"
          kubectl set image deployment/wisecow wisecow=$IMAGE || \
          kubectl apply -f k8s/deployment.yaml

      - name: Apply service
        run: |
          kubectl apply -f k8s/service.yaml

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/wisecow --timeout=5m

      - name: Get deployment info
        run: |
          echo "=== Pods ==="
          kubectl get pods -l app=wisecow
          echo ""
          echo "=== Service ==="
          kubectl get svc wisecow
          echo ""
          echo "=== Deployment Image ==="
          kubectl get deployment wisecow -o jsonpath='{.spec.template.spec.containers[0].image}'
          echo ""
