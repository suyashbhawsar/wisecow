name: Build and Deploy Wisecow

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  # Trigger on semantic version tags (e.g., v1.0.0)
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Semantic versioning tags (e.g., v1.0.0, v1.0, v1)
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # Short SHA tag (e.g., sha-abc1234)
            type=sha,prefix=sha-,format=short
            # Branch name (e.g., main)
            type=ref,event=branch
            # PR reference (e.g., pr-123)
            type=ref,event=pr
            # Latest tag (only on main branch)
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest and tags
        run: |
          echo "Image pushed with digest: ${{ steps.build-and-push.outputs.digest }}"
          echo ""
          echo "Image tags created:"
          echo "${{ steps.meta.outputs.tags }}"
          echo ""
          echo "Primary image tag for deployment:"
          echo "${{ fromJSON(steps.meta.outputs.json).tags[0] }}"
